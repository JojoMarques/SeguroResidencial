-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-11-18 17:01:15 BRT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g


DROP TABLE t_cliente CASCADE CONSTRAINTS;

DROP TABLE t_corretora CASCADE CONSTRAINTS;

DROP TABLE t_evento_cobertura CASCADE CONSTRAINTS;

DROP TABLE t_evento CASCADE CONSTRAINTS;

DROP TABLE t_funcionario CASCADE CONSTRAINTS;

DROP TABLE t_imovel CASCADE CONSTRAINTS;

DROP TABLE t_pct_assistencia CASCADE CONSTRAINTS;

DROP TABLE t_pct_cobertura CASCADE CONSTRAINTS;

DROP TABLE t_seguro CASCADE CONSTRAINTS;

DROP TABLE t_servico CASCADE CONSTRAINTS;

DROP TABLE t_servico_assistencia CASCADE CONSTRAINTS;

DROP TABLE t_sinistro CASCADE CONSTRAINTS;


DROP SEQUENCE SEQ_ID_CLIENTE;

DROP SEQUENCE SEQ_ID_CORRETORA;

DROP SEQUENCE SEQ_ID_EVENTO;

DROP SEQUENCE SEQ_ID_FUNCIONARIO;

DROP SEQUENCE SEQ_ID_IMOVEL;

DROP SEQUENCE SEQ_ID_PCT_ASSISTENCIA;

DROP SEQUENCE SEQ_ID_PCT_COBERTURA;

DROP SEQUENCE SEQ_ID_SEGURO;

DROP SEQUENCE SEQ_ID_SERVICO;

DROP SEQUENCE SEQ_ID_SINISTRO;

DROP SEQUENCE SEQ_ID_SERVICO_ASSISTENCIA;

DROP SEQUENCE SEQ_ID_EVENTO_COBERTURA;


-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE t_cliente (
    cd_cliente       NUMBER(5) NOT NULL,
    ds_senha_cliente VARCHAR(8),
    nm_cliente       VARCHAR(50),
    cpf_cliente      VARCHAR(11),
    telefone_cliente VARCHAR(11),
    email_cliente    VARCHAR2(50)
);

COMMENT ON COLUMN t_cliente.cd_cliente IS
    'identificador do cliente';

COMMENT ON COLUMN t_cliente.ds_senha_cliente IS
    'senha do cliente';

COMMENT ON COLUMN t_cliente.nm_cliente IS
    'nome do cliente';

COMMENT ON COLUMN t_cliente.cpf_cliente IS
    'cpf do cliente';

COMMENT ON COLUMN t_cliente.telefone_cliente IS
    'telefone do cliente';

COMMENT ON COLUMN t_cliente.email_cliente IS
    'email do cliente';

ALTER TABLE t_cliente ADD CONSTRAINT t_cliente_pk PRIMARY KEY ( cd_cliente );

CREATE TABLE t_corretora (
    cd_corretora          NUMBER(5) NOT NULL,
    nm_corretora          VARCHAR2(50),
    ds_endereco_corretora VARCHAR2(100)
);

COMMENT ON COLUMN t_corretora.cd_corretora IS
    'indentificador da corretora';

COMMENT ON COLUMN t_corretora.nm_corretora IS
    'nome da corretora';

COMMENT ON COLUMN t_corretora.ds_endereco_corretora IS
    'endere�o da corretora';

ALTER TABLE t_corretora ADD CONSTRAINT t_corretora_pk PRIMARY KEY ( cd_corretora );

CREATE TABLE t_evento_cobertura (
    cd_evento_cobertura NUMBER (5) NOT NULL,
    cd_cobertura NUMBER(5) NOT NULL,
    cd_evento    NUMBER(5) NOT NULL
);
ALTER TABLE t_evento_cobertura ADD CONSTRAINT T_evento_cobertura_PK PRIMARY KEY ( cd_evento_cobertura );

CREATE TABLE t_evento (
    cd_evento NUMBER(5) NOT NULL,
    nm_evento VARCHAR2(50),
    ds_evento VARCHAR2(100)
);

COMMENT ON COLUMN t_evento.cd_evento IS
    'identificador do evento das coberturas';

COMMENT ON COLUMN t_evento.nm_evento IS
    'nome do evento';

ALTER TABLE t_evento ADD CONSTRAINT t_evento_pk PRIMARY KEY ( cd_evento );

CREATE TABLE t_funcionario (
    cd_funcionario NUMBER(5) NOT NULL,
    ds_acesso_func VARCHAR(5),
    dt_admissao    DATE,
    senha          VARCHAR(8),
    nm_func        VARCHAR2(50),
    cpf_func       VARCHAR(11),
    telefone_func  VARCHAR(11),
    email_func     VARCHAR2(50)
);

COMMENT ON COLUMN t_funcionario.cd_funcionario IS
    'identificador do funcionario';

COMMENT ON COLUMN t_funcionario.ds_acesso_func IS
    'acesso do funcionario para login';

COMMENT ON COLUMN t_funcionario.senha IS
    'senha do funcionario';

ALTER TABLE t_funcionario ADD CONSTRAINT t_funcionario_pk PRIMARY KEY ( cd_funcionario );

CREATE TABLE t_imovel (
    cd_imovel  NUMBER(5) NOT NULL,
    cep        VARCHAR(8),
    numero     NUMBER(5),
    logradouro VARCHAR2(100),
    bairro     VARCHAR2(50),
    cidade     VARCHAR2(30),
    estado     VARCHAR2(30),
    pais       VARCHAR2(30),
    vl_area    NUMBER(*, 2),
    vl_imovel  NUMBER(*, 2),
    cd_cliente NUMBER(5) NOT NULL
);

COMMENT ON COLUMN t_imovel.cd_imovel IS
    'identificador do imovel';

COMMENT ON COLUMN t_imovel.cep IS
    'cep do imovel';

COMMENT ON COLUMN t_imovel.numero IS
    'numero do imovel';

COMMENT ON COLUMN t_imovel.logradouro IS
    'logradouro do imovel';

COMMENT ON COLUMN t_imovel.bairro IS
    'bairro do endere�o do imovel';

COMMENT ON COLUMN t_imovel.cidade IS
    'cidade do endere�o do imovel';

COMMENT ON COLUMN t_imovel.estado IS
'estado do endere�o do imovel';

COMMENT ON COLUMN t_imovel.pais IS
    'pais do endere�o do imovel';

COMMENT ON COLUMN t_imovel.vl_area IS
    'area do imovel';

COMMENT ON COLUMN t_imovel.vl_imovel IS
    'valor do imovel';

ALTER TABLE t_imovel ADD CONSTRAINT t_imovel_pk PRIMARY KEY ( cd_imovel,
                                                              cd_cliente );

CREATE TABLE t_pct_assistencia (
    cd_assistencia     NUMBER(5) NOT NULL,
    tp_assistencia     VARCHAR2(20),
    ds_assistencia     VARCHAR2(100),
    vl_pct_assistencia NUMBER(5, 2) NOT NULL
);

COMMENT ON COLUMN t_pct_assistencia.cd_assistencia IS
    'identificador do pacote da assistencia';

COMMENT ON COLUMN t_pct_assistencia.tp_assistencia IS
    'nome do tipo da assistencia';

COMMENT ON COLUMN t_pct_assistencia.ds_assistencia IS
    'descricao do pacote de assistencia';

COMMENT ON COLUMN t_pct_assistencia.vl_pct_assistencia IS
    'valor do pacote';

ALTER TABLE t_pct_assistencia ADD CONSTRAINT t_pct_assistencia_pk PRIMARY KEY ( cd_assistencia );

CREATE TABLE t_pct_cobertura (
    cd_cobertura     NUMBER(5) NOT NULL,
    tp_cobertura     VARCHAR2(20) NOT NULL,
    ds_cobertura     VARCHAR2(100),
    vl_pct_cobertura NUMBER(5, 2)
);

COMMENT ON COLUMN t_pct_cobertura.cd_cobertura IS
    'identificador da cobertura';

COMMENT ON COLUMN t_pct_cobertura.tp_cobertura IS
    'nome do tipo da cobertura';

COMMENT ON COLUMN t_pct_cobertura.ds_cobertura IS
    'descricao do pacote de cobertura';

COMMENT ON COLUMN t_pct_cobertura.vl_pct_cobertura IS
    'valor do pacote';

ALTER TABLE t_pct_cobertura ADD CONSTRAINT t_pct_cobertura_pk PRIMARY KEY ( cd_cobertura );

CREATE TABLE t_seguro (
    cd_seguro      NUMBER(5) NOT NULL,
    vl_premio      NUMBER(7, 2),
    dt_inicio      DATE,
    dt_fim         DATE,
    cd_cliente     NUMBER(5) NOT NULL,
    cd_cobertura   NUMBER(5) NOT NULL,
    cd_assistencia NUMBER(5) NOT NULL,
    cd_corretora   NUMBER(5) NOT NULL
);

COMMENT ON COLUMN t_seguro.cd_seguro IS
    'identificador do seguro';

COMMENT ON COLUMN t_seguro.vl_premio IS
    'valor coberto pelo seguro';

COMMENT ON COLUMN t_seguro.dt_inicio IS
    'data de contrata��o do seguro';

COMMENT ON COLUMN t_seguro.dt_fim IS
    'data do fim do contrato';



ALTER TABLE t_seguro ADD CONSTRAINT t_seguro_pk PRIMARY KEY ( cd_seguro);

CREATE TABLE t_servico (
    cd_servico NUMBER(5) NOT NULL,
    nm_servico VARCHAR2(50),
    ds_servico VARCHAR2(100)
);

COMMENT ON COLUMN t_servico.cd_servico IS
    'identificador do servico prestado no pacote assistencia';

COMMENT ON COLUMN t_servico.ds_servico IS
    'descricao do servico ';

ALTER TABLE t_servico ADD CONSTRAINT t_servico_pk PRIMARY KEY ( cd_servico );

CREATE TABLE t_servico_assistencia (
    cd_servico_assistencia NUMBER(5) NOT NULL,
    cd_assistencia NUMBER(5) NOT NULL,
    cd_servico     NUMBER(5) NOT NULL
);
ALTER TABLE t_servico_assistencia ADD CONSTRAINT t_servico_assistencia_pk PRIMARY KEY ( cd_servico_assistencia );

CREATE TABLE t_sinistro (
    cd_sinistro NUMBER(5),
    tp_sinistro VARCHAR2(30),
    dt_sinistro DATE,
    ds_sinistro VARCHAR2(100),
    status      VARCHAR(1),
    cd_seguro   NUMBER(5) NOT NULL,
    cd_cliente  NUMBER(5) NOT NULL
);

ALTER TABLE t_sinistro ADD CONSTRAINT t_sinistro_pk PRIMARY KEY ( cd_sinistro );

COMMENT ON COLUMN t_sinistro.cd_sinistro IS
    'identificador do sinistro';

COMMENT ON COLUMN t_sinistro.tp_sinistro IS
    'nome do tipo de sinistro';

COMMENT ON COLUMN t_sinistro.dt_sinistro IS
    'data de abertura do sinistro';

COMMENT ON COLUMN t_sinistro.ds_sinistro IS
    'descricao do sinistro';

COMMENT ON COLUMN t_sinistro.status IS
    'estado do sinistro ';


--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE t_servico_assistencia
    ADD CONSTRAINT fk_assistencia_servico_assistencia FOREIGN KEY ( cd_assistencia )
        REFERENCES t_pct_assistencia ( cd_assistencia );

ALTER TABLE t_imovel
    ADD CONSTRAINT fk_cliente_imovel FOREIGN KEY ( cd_cliente )
        REFERENCES t_cliente ( cd_cliente );

ALTER TABLE t_seguro
    ADD CONSTRAINT fk_cliente_seguro FOREIGN KEY ( cd_cliente )
        REFERENCES t_cliente ( cd_cliente );

ALTER TABLE t_evento_cobertura
    ADD CONSTRAINT fk_evento_evento_cobertura FOREIGN KEY ( cd_evento )
        REFERENCES t_evento ( cd_evento );

ALTER TABLE t_evento_cobertura
    ADD CONSTRAINT fk_pacote_evento_cobertura FOREIGN KEY ( cd_cobertura )
        REFERENCES t_pct_cobertura ( cd_cobertura );

ALTER TABLE t_seguro
    ADD CONSTRAINT fk_seguro_assistencia FOREIGN KEY ( cd_assistencia )
        REFERENCES t_pct_assistencia ( cd_assistencia );

ALTER TABLE t_seguro
    ADD CONSTRAINT fk_seguro_cobertura FOREIGN KEY ( cd_cobertura )
        REFERENCES t_pct_cobertura ( cd_cobertura );

ALTER TABLE t_seguro
    ADD CONSTRAINT fk_seguro_corretora FOREIGN KEY ( cd_corretora )
        REFERENCES t_corretora ( cd_corretora );

ALTER TABLE t_sinistro
    ADD CONSTRAINT fk_seguro_sinistro FOREIGN KEY ( cd_seguro)
        REFERENCES t_seguro (cd_seguro);

ALTER TABLE t_servico_assistencia
    ADD CONSTRAINT fk_servico_servico_assistencia FOREIGN KEY ( cd_servico )
        REFERENCES t_servico ( cd_servico );

-- Sequence e Trigger para t_cliente
CREATE SEQUENCE SEQ_ID_CLIENTE START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_CLIENTE
BEFORE INSERT ON t_cliente FOR EACH ROW
BEGIN
    SELECT SEQ_ID_CLIENTE.NEXTVAL INTO :NEW.cd_cliente FROM DUAL;
END;
/

-- Sequence e Trigger para t_corretora
CREATE SEQUENCE SEQ_ID_CORRETORA START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_CORRETORA
BEFORE INSERT ON t_corretora FOR EACH ROW
BEGIN
    SELECT SEQ_ID_CORRETORA.NEXTVAL INTO :NEW.cd_corretora FROM DUAL;
END;
/

-- Sequence e Trigger para t_evento
CREATE SEQUENCE SEQ_ID_EVENTO START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_EVENTO
BEFORE INSERT ON t_evento FOR EACH ROW
BEGIN
    SELECT SEQ_ID_EVENTO.NEXTVAL INTO :NEW.cd_evento FROM DUAL;
END;
/

-- Sequence e Trigger para t_funcionario
CREATE SEQUENCE SEQ_ID_FUNCIONARIO START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_FUNCIONARIO
BEFORE INSERT ON t_funcionario FOR EACH ROW
BEGIN
    SELECT SEQ_ID_FUNCIONARIO.NEXTVAL INTO :NEW.cd_funcionario FROM DUAL;
END;
/

-- Sequence e Trigger para t_imovel
CREATE SEQUENCE SEQ_ID_IMOVEL START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_IMOVEL
BEFORE INSERT ON t_imovel FOR EACH ROW
BEGIN
    SELECT SEQ_ID_IMOVEL.NEXTVAL INTO :NEW.cd_imovel FROM DUAL;
END;
/

-- Sequence e Trigger para t_pct_assistencia
CREATE SEQUENCE SEQ_ID_PCT_ASSISTENCIA START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_PCT_ASSISTENCIA
BEFORE INSERT ON t_pct_assistencia FOR EACH ROW
BEGIN
    SELECT SEQ_ID_PCT_ASSISTENCIA.NEXTVAL INTO :NEW.cd_assistencia FROM DUAL;
END;
/

-- Sequence e Trigger para t_pct_cobertura
CREATE SEQUENCE SEQ_ID_PCT_COBERTURA START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_PCT_COBERTURA
BEFORE INSERT ON t_pct_cobertura FOR EACH ROW
BEGIN
    SELECT SEQ_ID_PCT_COBERTURA.NEXTVAL INTO :NEW.cd_cobertura FROM DUAL;
END;
/


CREATE SEQUENCE SEQ_ID_SEGURO 
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;

-- Recria a trigger para associar a sequence ao campo `cd_seguro`
CREATE OR REPLACE TRIGGER TR_INSERT_SEGURO
BEFORE INSERT ON t_seguro
FOR EACH ROW
BEGIN
    IF :NEW.cd_seguro IS NULL THEN
        SELECT SEQ_ID_SEGURO.NEXTVAL INTO :NEW.cd_seguro FROM DUAL;
    END IF;
END;
/


-- Sequence e Trigger para t_servico
CREATE SEQUENCE SEQ_ID_SERVICO START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_SERVICO
BEFORE INSERT ON t_servico FOR EACH ROW
BEGIN
    SELECT SEQ_ID_SERVICO.NEXTVAL INTO :NEW.cd_servico FROM DUAL;
END;
/

-- Sequence e Trigger para t_sinistro
CREATE SEQUENCE SEQ_ID_SINISTRO START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_SINISTRO
BEFORE INSERT ON t_sinistro FOR EACH ROW
BEGIN
    SELECT SEQ_ID_SINISTRO.NEXTVAL INTO :NEW.cd_sinistro FROM DUAL;
END;
/

-- Criando a Sequence para t_servico_assistencia
CREATE SEQUENCE SEQ_ID_SERVICO_ASSISTENCIA START WITH 1 INCREMENT BY 1;

-- Criando o Trigger para t_servico_assistencia
CREATE OR REPLACE TRIGGER TR_INSERT_SERVICO_ASSISTENCIA
BEFORE INSERT ON t_servico_assistencia FOR EACH ROW
BEGIN
    SELECT SEQ_ID_SERVICO_ASSISTENCIA.NEXTVAL INTO :NEW.cd_servico_assistencia FROM DUAL;
END;
/

-- Criando a Sequence para t_evento_cobertura
CREATE SEQUENCE SEQ_ID_EVENTO_COBERTURA START WITH 1 INCREMENT BY 1;

-- Criando o Trigger para t_evento_cobertura
CREATE OR REPLACE TRIGGER TR_INSERT_EVENTO_COBERTURA
BEFORE INSERT ON t_evento_cobertura FOR EACH ROW
BEGIN
    SELECT SEQ_ID_EVENTO_COBERTURA.NEXTVAL INTO :NEW.cd_evento_cobertura FROM DUAL;
END;
/
commit;
